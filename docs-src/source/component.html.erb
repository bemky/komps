<% component = SourceHelpers.component(component_name) %>
<% extended_component = SourceHelpers.component(component[:extends]) if component[:extends] %>
<div class="section space-v-3x">
    
    <div class="">
        <h1 class="text-2x text-overflow-hidden text-nowrap">
            <%= component[:name] %>
            <% if extended_component %>
            <span class="text-light text-italic text-gray-50 text-xl">
                (extends <%= extended_component[:name] %>)
            </span>
            <% end %>
        </h1>
    
        <div class="text-light text-xl">
            <%= markdown component["Description"] %>
        </div>
    </div>
    
    <% if component["Example"] %>
    <div class="">
        <h2>Example</h2>
        <script>
            function resizeIframe(obj) {
                obj.style.height = obj.contentWindow.document.documentElement.scrollHeight + 'px';
            }
        </script>
        <iframe class="overflow-hidden rounded-lg" width="100%" height="10px" src="/<%= component[:example_url] %>/index.html" frameborder="0" scrolling="no" onload="resizeIframe(this)"></iframe>
    </div>
    <% end %>
    
    <% if component["Syntax"] %>
    <div class="">
        <h2>Syntax</h2>
        <%= markdown(component["Syntax"]) %>
    </div>
    <% end %>
    
    <% component.except(:name, :extends, :file_name, :params, :source, :example_url, "Description", "Example", "Syntax").each do |header, content| %>
        <div class="">
            <h2><%= header %></h2>
            <%
                yaml = ""
                content.gsub!(/^\s*[\w\[\]\'\"]+:.*/) do |match|
                    yaml += match + "\n"
                    ""
                end
            %>
            <% if content.include?("<") %>
                <%= content %>
            <% else %>
                <%= markdown(content).gsub(/\s\#(\w+)/, '<span class="uniformLabel -gray-50 -outline text-normal text-xs text-uppercase align-middle">\1</span>') %>
            <% end %>
            <% if yaml.present? %>
                <% table_data = YAML.load(yaml) %>
                <% headers = table_data.map {|k, v| v.keys}.flatten.uniq %>
                <table class="uniformTable">
                    <tr>
                        <th></th>
                        <% headers.each do |header| %>
                            <th><%= header %></th>
                        <% end %>
                    </tr>
                    <% table_data.each do |key, row| %>
                        <tr>
                            <td>
                                <code><%= key %></code>
                            </td>
                            <% headers.each do |header| %>
                                <td>
                                    <% if header == "description" %>
                                        <%= markdown(row[header]) %>
                                    <% else %>
                                        <%= row[header] %>
                                    <% end %>
                                </td>
                            <% end %>
                        </tr>
                    <% end %>
                </table>
            <% end %>
        </div>
    <% end %>
    
    <button class="js-toggle-source reset text-sm text-bold text-gray-30 hover:text-blue" rel="#source-for-<%= component[:file_name] %>">
        SHOW SOURCE
    </button>
    <div class="source hide" id="source-for-<%= component[:file_name] %>">
        <div class="border border-blue bg-blue rounded-xl overflow-hidden">
            <div class="text-white text-sm text-bold pad-h pad-v-1/4x">
                SOURCE CODE
            </div>
            <%= code 'javascript', component[:source] %>
        </div>
    </div>
</div>